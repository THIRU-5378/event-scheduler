{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiru\\\\OneDrive\\\\Desktop\\\\event-scheduler\\\\frontend\\\\src\\\\components\\\\EventForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventForm({\n  onCreate\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [allDay, setAllDay] = useState(false);\n  async function submit(e) {\n    e.preventDefault();\n    if (!title || !date) return alert('Title and date required');\n    await onCreate({\n      title,\n      description,\n      date,\n      allDay\n    });\n    setTitle('');\n    setDescription('');\n    setDate('');\n    setAllDay(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"event-form\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Event title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: date,\n      onChange: e => setDate(e.target.value),\n      type: \"datetime-local\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description (optional)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: allDay,\n        onChange: e => setAllDay(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), \" All day\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 1\n  }, this);\n}\n_s(EventForm, \"m5x/8YFUIQIH4+BOlkubr6Bg3xs=\");\n_c = EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EventForm","onCreate","_s","title","setTitle","description","setDescription","date","setDate","allDay","setAllDay","submit","e","preventDefault","alert","className","onSubmit","children","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/thiru/OneDrive/Desktop/event-scheduler/frontend/src/components/EventForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport default function EventForm({ onCreate }) {\r\nconst [title, setTitle] = useState('')\r\nconst [description, setDescription] = useState('')\r\nconst [date, setDate] = useState('')\r\nconst [allDay, setAllDay] = useState(false)\r\n\r\n\r\nasync function submit(e) {\r\ne.preventDefault();\r\nif (!title || !date) return alert('Title and date required')\r\nawait onCreate({ title, description, date, allDay })\r\nsetTitle(''); setDescription(''); setDate(''); setAllDay(false)\r\n}\r\n\r\n\r\nreturn (\r\n<form className=\"event-form\" onSubmit={submit}>\r\n<input value={title} onChange={e=>setTitle(e.target.value)} placeholder=\"Event title\" />\r\n<input value={date} onChange={e=>setDate(e.target.value)} type=\"datetime-local\" />\r\n<textarea value={description} onChange={e=>setDescription(e.target.value)} placeholder=\"Description (optional)\" />\r\n<label>\r\n<input type=\"checkbox\" checked={allDay} onChange={e=>setAllDay(e.target.checked)} /> All day\r\n</label>\r\n<button type=\"submit\">Add event</button>\r\n</form>\r\n)\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvC,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAG3C,eAAec,MAAMA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACV,KAAK,IAAI,CAACI,IAAI,EAAE,OAAOO,KAAK,CAAC,yBAAyB,CAAC;IAC5D,MAAMb,QAAQ,CAAC;MAAEE,KAAK;MAAEE,WAAW;MAAEE,IAAI;MAAEE;IAAO,CAAC,CAAC;IACpDL,QAAQ,CAAC,EAAE,CAAC;IAAEE,cAAc,CAAC,EAAE,CAAC;IAAEE,OAAO,CAAC,EAAE,CAAC;IAAEE,SAAS,CAAC,KAAK,CAAC;EAC/D;EAGA,oBACAX,OAAA;IAAMgB,SAAS,EAAC,YAAY;IAACC,QAAQ,EAAEL,MAAO;IAAAM,QAAA,gBAC9ClB,OAAA;MAAOmB,KAAK,EAAEf,KAAM;MAACgB,QAAQ,EAAEP,CAAC,IAAER,QAAQ,CAACQ,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxF1B,OAAA;MAAOmB,KAAK,EAAEX,IAAK;MAACY,QAAQ,EAAEP,CAAC,IAAEJ,OAAO,CAACI,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACQ,IAAI,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClF1B,OAAA;MAAUmB,KAAK,EAAEb,WAAY;MAACc,QAAQ,EAAEP,CAAC,IAAEN,cAAc,CAACM,CAAC,CAACQ,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClH1B,OAAA;MAAAkB,QAAA,gBACAlB,OAAA;QAAO2B,IAAI,EAAC,UAAU;QAACC,OAAO,EAAElB,MAAO;QAACU,QAAQ,EAAEP,CAAC,IAAEF,SAAS,CAACE,CAAC,CAACQ,MAAM,CAACO,OAAO;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,YACpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR1B,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEP;AAACvB,EAAA,CA1BuBF,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}